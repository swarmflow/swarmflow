services:
  test_app:
    build:
      context: .
      dockerfile: core/Dockerfile
    container_name: test_fastapi_app
    ports:
      - "8001:8000"
    depends_on:
      test_postgres:
        condition: service_healthy
      test_redis:
        condition: service_healthy
      worker_agent:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      PYTHONPATH: /app
    volumes:
      - .:/app
    command: >
      sh -c "
        cd /app &&
        pytest core/tests/test.py -v
      "
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://0.0.0.0:8000/"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  test_postgres:
    image: postgres:latest
    container_name: test_postgres_db
    ports:
      - "5433:5432"
    env_file:
      - .env
    tmpfs:
      - /var/lib/postgresql/data
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  test_redis:
    image: redis:latest
    container_name: test_redis
    ports:
      - "6380:6379"
    env_file:
      - .env
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  worker_agent:
    build:
      context: .
      dockerfile: worker_agent/Dockerfile
    deploy:
      replicas: 3
    ports:
      - "8002"
    depends_on:
      test_redis:
        condition: service_healthy
    env_file:
      - .env
    command: uvicorn worker_agent.main:app --host 0.0.0.0 --port 8002
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "wget","-O", "/dev/null", "http://0.0.0.0:8002/"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s


networks:
  test-network:
    driver: bridge


# services:
#   test_app:
#     build:
#       context: .
#       dockerfile: core/Dockerfile
#     container_name: test_fastapi_app
#     ports:
#       - "8001:8000"
#     depends_on:
#       test_postgres:
#         condition: service_healthy
#     env_file:
#       - .env
#     environment:
#       DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
#       PYTHONPATH: /app
#     volumes:
#       - .:/app
#     command: uvicorn core.server.main:app --host 0.0.0.0 --port 8000
#     networks:
#       - test-network

#   test_runner:
#     build:
#       context: .
#       dockerfile: core/Dockerfile
#     depends_on:
#       - test_app
#     env_file:
#       - .env
#     environment:
#       DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
#       PYTHONPATH: /app
#     volumes:
#       - .:/app
#     command: >
#       sh -c "
#         sleep 5 &&
#         cd /app &&
#         pytest core/tests/test.py -v
#       "
#     networks:
#       - test-network

#   test_postgres:
#     image: postgres:latest
#     container_name: test_postgres_db
#     ports:
#       - "5433:5432"
#     env_file:
#       - .env
#     tmpfs:
#       - /var/lib/postgresql/data
#     networks:
#       - test-network
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
#       interval: 5s
#       timeout: 5s
#       retries: 5

# networks:
#   test-network:
#     driver: bridge

# volumes:
#   postgres_data:
